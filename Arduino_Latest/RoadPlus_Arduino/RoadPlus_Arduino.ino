#include <Servo.h>


//voor serial
char incomingByte = 0;
String message;
String metaMessage;
String meta;


//Define States:
boolean state;
boolean warning;
boolean oneWay;
boolean sign;
boolean sonarOn;

//Define Global Variables:
int density;    //number 1-10, depending on how busy the road is


//Define instances of Servo:
Servo Servo1;

//Define Pins:
const int trigPin1 = A0;
const int echoPin1 = A1;
const int trigPin2 = A4;
const int echoPin2 = A3;
const int servoPin1 = A2;

//voor temperatuur
#include <OneWire.h>
#include <DallasTemperature.h>
#define ONE_WIRE_BUS 11
OneWire ourWire(ONE_WIRE_BUS);
DallasTemperature sensors(&ourWire);
DeviceAddress Thermometer;

//voor led matrix
#include <Arduino.h>

//IO
#define LEDARRAY_D 2
#define LEDARRAY_C 3
#define LEDARRAY_B 4
#define LEDARRAY_A 5
#define LEDARRAY_G 6
#define LEDARRAY_DI 7
#define LEDARRAY_CLK 8
#define LEDARRAY_LAT 9


//Define Sign Bitmaps:

//Warning Sign:
const unsigned char  signWarning[32] =
{
  0xfe, 0xfd, 0xfd, 0xfb, 0xfa, 0xf6, 0xf6, 0xee,
  0xee, 0xde, 0xde, 0xbf, 0xbe, 0x7e, 0x7f, 0x00,
  0x7f, 0xbf, 0xbf, 0xdf, 0x5f, 0x6f, 0x6f, 0x77,
  0x77, 0x7b, 0x7b, 0xfd, 0x7d, 0x7e, 0xfe, 0x00,
};

//One Way Street:
const unsigned char  OneDirection[32] =
{
  0xf8, 0xe0, 0xe0, 0x80, 0x80, 0x00, 0x00, 0x0f,
  0x0f, 0x00, 0x00, 0x80, 0x80, 0xc0, 0xe0, 0xf8,
  0x1f, 0x07, 0x03, 0x01, 0x01, 0x00, 0x00, 0xf0,
  0xf0, 0x00, 0x00, 0x01, 0x01, 0x03, 0x07, 0x1f,
};

//The Number 0:
const unsigned char  sign0[16] =
{
  0xff, 0xff, 0x83, 0xbb, 0xbb, 0xbb, 0xbb, 0xbb,
  0xbb, 0xbb, 0xbb, 0xbb, 0xbb, 0x83, 0xff, 0xff,
};
//The Number 1:
const unsigned char  sign1[16] =
{
  0xff, 0xff, 0xfb, 0xf3, 0xeb, 0xfb, 0xfb, 0xfb,
  0xfb, 0xfb, 0xfb, 0xfb, 0xfb, 0xfb, 0xff, 0xff,
};
//The Number 2:
const unsigned char  sign2[16] =
{
  0xff, 0xff, 0xc1, 0xfd, 0xfd, 0xfd, 0xfd, 0xc1,
  0xdf, 0xdf, 0xdf, 0xdf, 0xdf, 0xc1, 0xff, 0xff,
};
//The Number 3:
const unsigned char  sign3[16] =
{
  0xff, 0xFF, 0xc1, 0xfd, 0xfd, 0xfd, 0xfd, 0xf1,
  0xf1, 0xfd, 0xfd, 0xfd, 0xfd, 0xc1, 0xff, 0xff,
};
//The Number 4:
const unsigned char  sign4[16] =
{
  0xff, 0xff, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xc1,
  0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xff, 0xff,
};
//The Number 5:
const unsigned char  sign5[16] =
{
  0xff, 0xff, 0x83, 0xbf, 0xbf, 0xbf, 0xbf, 0x83,
  0xfb, 0xfb, 0xfb, 0xfb, 0xfb, 0x83, 0xff, 0xff,
};
//The Number 6:
const unsigned char  sign6[16] =
{
  0xff, 0xff, 0xc1, 0xdf, 0xdf, 0xdf, 0xdf, 0xc1,
  0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xc1, 0xff, 0xff,
};
//The Number 7:
const unsigned char  sign7[16] =
{
  0xff, 0xff, 0xc1, 0xfd, 0xfd, 0xfb, 0xfb, 0xf7,
  0xf7, 0xf7, 0xef, 0xef, 0xdf, 0xdf, 0xff, 0xff,
};
//The Number 8:
const unsigned char  sign8[16] =
{
  0xff, 0xff, 0xc1, 0xdd, 0xdd, 0xdd, 0xdd, 0xc1,
  0xc1, 0xdd, 0xdd, 0xdd, 0xdd, 0xc1, 0xff, 0xff,
};
//The Number 9:
const unsigned char  sign9[16] =
{
  0xff, 0xff, 0xc1, 0xdd, 0xdd, 0xdd, 0xdd, 0xc1,
  0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xc1, 0xff, 0xff,
};

void setup()
{
  //Set Pinmode For Display Pins:
  pinMode(LEDARRAY_D, OUTPUT);
  pinMode(LEDARRAY_C, OUTPUT);
  pinMode(LEDARRAY_B, OUTPUT);
  pinMode(LEDARRAY_A, OUTPUT);
  pinMode(LEDARRAY_G, OUTPUT);
  pinMode(LEDARRAY_DI, OUTPUT);
  pinMode(LEDARRAY_CLK, OUTPUT);
  pinMode(LEDARRAY_LAT, OUTPUT);
  
  //Set Pinmode for Ultrasonic Pins:
  pinMode(trigPin1, OUTPUT);
  pinMode(echoPin1, INPUT);
  pinMode(trigPin2, OUTPUT);
  pinMode(echoPin2, INPUT);
  
  //open Serial Connection:
  Serial.begin(19200);
  
  //attach Servo To Pins:   
  Servo1.attach(servoPin1);
  
  //start Reading Sensor Data:
  sensors.begin();
  sensors.getDeviceCount(); 
  if (!sensors.getAddress(Thermometer, 0)) Serial.println("Unable to find address for Device 0");   
  sensors.setResolution(Thermometer, 9);
}

void loop()
{
  GetMessage();
  if (sign)
  {
    DisplaySpeedLimit();
  }
  else
  {
    delayMicroseconds(102);
  }
  if (sonarOn)
  {    
    GetDensity();
  }
}

































